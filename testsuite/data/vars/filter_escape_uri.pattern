%% vim:ft=erlang:

%% TEST
{setup,
  fun() ->
      application:start(syslogger),
      application:start(yamerl),
      application:start(otis)
  end,
  fun(_) ->
      error_logger:tty(false),
      ok = application:stop(otis),
      ok = application:stop(yamerl),
      ok = application:stop(syslogger)
  end,
  [
    ?_assertMatch(
      {no_state, "value"},
      otis_var:run_filters(no_state,
        otis_var:parse("$(var)"),
        "value")
    ),
    ?_assertMatch(
      {no_state, "value"},
      otis_var:run_filters(no_state,
        otis_var:parse("$(var|escape_uri)"),
        "value")
    ),
    ?_assertMatch(
      {no_state, "value"},
      otis_var:run_filters(no_state,
        otis_var:parse("$(var|unescape_uri)"),
        "value")
    ),
    ?_assertMatch(
      {no_state, "value%3D1"},
      otis_var:run_filters(no_state,
        otis_var:parse("$(var|escape_uri)"),
        "value=1")
    ),
    ?_assertMatch(
      {no_state, "value=1"},
      otis_var:run_filters(no_state,
        otis_var:parse("$(var|unescape_uri)"),
        "value%3D1")
    ),
    ?_assertMatch(
      {no_state, "value=1"},
      otis_var:run_filters(no_state,
        otis_var:parse("$(var|escape_uri|unescape_uri)"),
        "value=1")
    )
  ]
}
